% Main_RunActiveLearnSen_CLOSURENASALOFF.m
% run actve learning to find vowels
% use sensitivity condition

close all
clear all 
clc

% want only 10 vowels which will the be optimized for
% diversity across vowel space
% and for low sensitivity   

% select 20 because no extra cost for more
patterns = 40;

ask=0;
selectionIdx = [1:patterns];
silencePadding=0;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% To increase variety in sounds discovered by babbling, optimize over following reward criteria separately and then in combinations

% setup experiment
%  RUN reoptimizations
[model, params, setup] =  SetupBabbleExperiment('ALS_CLOSURE_NOFF4', 'TEST', patterns, ask);
params.wantNasalOn=0;
params.wantNasalOff=1;

params.wantVoiceOn=0;
params.wantVoiceOff=0;
params.wantVoiceScale=0;  
params.wantBreathFxModel=1;    
params.wantBreathingModel=0;

params.vtParamsMode = params.vtParamsOneTarget;
params.silencePadding=silencePadding;

% distance from min point
params.scParamsMinIdx = 0.0; % zero weight
params.WantTubeMinimumPoint=1;

params.functionCalls = 100;
params.wantClipGA=1;
params.scaleGA=1.0;
params.scaleFx=2;
params.wantNasalScale=0;

% set diversity weightings- only used acoustic sensory consequences for vowels
params.vtParamsDMW = 0; % only use vt 
params.ppParamsDMW = 1; % only use touch
params.scParamsDMW = 0; % only use sc 
params.csaParamsDMW =   0;
params.sensitivityScaling=1000;
params.scDistanceCostScaling=3000;
params.vtDistanceCostScaling=1000;
params.ppDistanceCostScaling=3000;
params.csaDistanceCostScaling=100;

params.motorPatternSensitivityThresh=300;

% 2 is quite strict
params.pruneContactTheshold=3;

% run optimization
utilityWeighing = 10 * ones(1,17); % encourage contact
utilityWeighing(18) = 0;    % power
utilityWeighing(19) = 0;   % dont want spectral change
utilityWeighing(20) = 0;    % voicing
utilityWeighing(21) = 1;    % minimize vocal effort
utilityWeighing(22) = 1;    % minimize articulator effort
utilityWeighing(23) = 0;    % nasal 
utilityWeighing(24) = 0;    % LFversusHF 
utilityWeighing(25) = 0;    % HFversusLF 
utilityWeighing(26) = 0;    % multiple tongue touch
utilityWeighing(27) = 0;    % tube minimimum location

% fix segment durations to minimize variability
params.vtParamsMode=params.vtParamsOneTargetFixDur;

% turn off breath model so no change in output over duration over utterance 
params.wantBreathFxModel=0;    
params.wantBreathingModel=0;

% set utility weightings
params = SetUtilityWeighting(params, utilityWeighing);  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% initialization and first 3 trials
    
    params.optimizationCycles = 3;    
    % run optimization to discover potentially useful VT configurations
    % diversity only used wrt to previously discovered patterns
    RunOptimizationALCLOSURE(params, setup.filenameOneTarget, setup.dirMotorTargets);
   
    selectionIdx=3;
    DisplayInfo(params, setup.filenameOneTarget, setup.dirMotorTargets, selectionIdx);

    if(0)
        % play out to test
        selectionIdx=1:patterns;
        debug=0;
        PlayAnalysisAllTargets(params, setup.filenameOneTarget, setup.dirMotorTargets, selectionIdx,1 ,params.silencePadding, debug);        
    end
    

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % cluster to remove redundancy
    
    % compute Contact              
    debug=0;
    PlayRawGetContact(params, setup.filenameOneTarget, setup.dirMotorTargets,1, 0, debug);

    % clustering for equilization on the infant synthesised data
    params.KMeansDTWClusters = 15;
    params.KMeansIterations = 20;
    setup.filenameADPKMeans = sprintf('ADPKMmeans_%s', setup.datasetName);
    % agentMode=6; % VectorContact
    agentMode=7; % TubeCSA    
    RunKMeansDTWV2(params,  setup.filenameOneTarget, setup.dirMotorTargets, setup.filenameADPKMeans,agentMode);
    
    debug=0;
    params.wantBreathFxModel=0;    
    params.wantBreathingModel=0;
    params.vtParamsMode = params.vtParamsOneTargetFixDur;
    params.WantTubeMinimumPoint = 1;

    % centre targets by clusters and generate new list
    CentreDTWClusters(params, setup.filenameADPKMeans, setup.dirMotorTargets, setup.filenameCentreTargets);

    % not nasalized
    selectionIdx=1:1000;
    debug=0;
    params.WantTubeMinimumPoint = 1;
    PlayRawIndividualSynthesisV2(params, setup.filenameCentreTargets, setup.dirMotorTargets, selectionIdx,1 ,params.silencePadding, 1, debug);    
    
    
    return
    
    % testing from here on for fricatives
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % re optimize for frication based on plosives
    
    % copy file
    fullFilenameIn = sprintf('%s\\%s.mat', setup.dirMotorTargets, setup.filenameOneTarget);
    fullFilenameOut = sprintf('%s\\%sFRIC.mat', setup.dirMotorTargets, setup.filenameOneTarget );
    %copyfile(fullFilenameIn,fullFilenameOut);
    setup.filenameOneTargetFRIC = sprintf('%sFRIC', setup.filenameOneTarget);
    
    % set diversity weightings- only used acoustic sensory consequences for vowels
    params.vtParamsDMW = 0;% only use vt 
    params.ppParamsDMW = 0;
    params.scParamsDMW = 1; % only use sc 
    params.csaParamsDMW =   0;
    params.sensitivityScaling=1000;
    params.scDistanceCostScaling=3000;
    params.vtDistanceCostScaling=1000;
    params.ppDistanceCostScaling=1000;
    params.csaDistanceCostScaling=100;

    params.motorPatternSensitivityThresh=300;

    % run optimization
    utilityWeighing = -500 * ones(1,17); % discourage all contact
    utilityWeighing(18) = 1000;    % power
    utilityWeighing(19) = -1;   % dont want spectral change
    utilityWeighing(20) = 0;    % voicing
    utilityWeighing(21) = 1;    % minimize vocal effort
    utilityWeighing(22) = 1;    % minimize articulator effort
    utilityWeighing(23) = 0;    % nasal 
    utilityWeighing(24) = 0;    % LFversusHF 
    utilityWeighing(25) = 100;    % HFversusLF 
    utilityWeighing(26) = 0;    % multiple tongue touch
    utilityWeighing(27) = 0;    % tube minimimum location

    % fix segment durations to minimize variability
    params.vtParamsMode=params.vtParamsOneTargetFixDur;

    % turn off breath model so no change in output over duration over utterance 
    params.wantBreathFxModel=0;    
    params.wantBreathingModel=0;

    % set utility weightings
    params = SetUtilityWeighting(params, utilityWeighing);  

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % run re-optimization to discover potentially useful fricative VT configurations
    % starting from plotives
    % diversity used wrt to ALL previously discovered patterns
    % and each pattern is reoptimized in turn for 'REOptimizationCycles' cycles
    
    params.REOptimizationCycles=3; 
    startingFrom=1;
    RunREOptimizationALFRICATIVE(params, setup.filenameOneTargetFRIC, setup.dirMotorTargets, startingFrom);
    
    selectionIdx=1;
    DisplayInfo(params, setup.filenameOneTargetFRIC, setup.dirMotorTargets, selectionIdx);

    % play out to test
    selectionIdx=1:patterns;
    debug=0;
    PlayRawIndividualSynthesisV2(params, setup.filenameOneTargetFRIC, setup.dirMotorTargets, selectionIdx,1 ,params.silencePadding, 1, debug);    

        
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % prune non-fricative sounds

    % spectral balance
    AnalyseSalience(params, setup.filenameOneTargetFRIC, setup.dirMotorTargets, 1);

    % prune out low acoustic salient utteramces
    PruneOnSpectralBalanceLess(params, setup.filenameOneTargetFRIC, setup.filenameBCPruned, setup.dirMotorTargets,  setup.wantTestMode);   

    pruneHFversusLFRatio=8;
    PruneOnSpectralBalanceLess2(params, setup.filenameBCPruned, setup.filenameBCPruned, setup.dirMotorTargets,  pruneHFversusLFRatio, setup.wantTestMode);   
     
    %randomRepeats=0;
    %pruneThreshsold=0.001
    %wantTestMode=0;
    %PruneOnSalience(params, setup.filenameBCPruned, setup.filenameBCPruned, setup.dirMotorTargets, pruneThreshsold, randomRepeats, wantTestMode)

    
    % play out to test
    selectionIdx=1:patterns;
    debug=0;
    PlayRawIndividualSynthesisV2(params, setup.filenameBCPruned, setup.dirMotorTargets, selectionIdx,1 ,params.silencePadding, 1, debug);    
    
    if(0)
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % analyse salience
        
    % run on dataset
    params.vtParamsMode = params.vtParamsOneTargetFixDur;
    % turn off breath model so no change in output over duration over utterance 
    params.wantBreathFxModel=0;    
    params.wantBreathingModel=0;
    sensitivity = AnalyseSensitivity(params,  setup.filenameBCPruned, setup.dirMotorTargets);

     % sort
    filenameSortSen = sprintf('%sSenSort', setup.filenameBCPruned);
    wantPercent=80;
    [updated, sortSensitivity, sortIdx, percentThresh] = SortOnSensitivity(params, setup.filenameBCPruned, filenameSortSen, setup.dirMotorTargets, wantPercent);

    % play out selection non-nasalized
    selectionIdx=1:patterns;
    debug=0;
    params.WantTubeMinimumPoint = 1;
    params.vtParamsMode = params.vtParamsOneTarget;
    params.silencePadding=0;
    PlayRawIndividualSynthesisV2(params, filenameSortSen, setup.dirMotorTargets, selectionIdx, 1, params.silencePadding, 1, debug);    
    end
    
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % compute STS              
    debug=0;
    PlayRawGetSTS(params, setup.filenameBCPruned, setup.dirMotorTargets,1, 0, debug);

    % clustering for equilization on the infant synthesised data
    params.KMeansDTWClusters = 10;
    params.KMeansIterations = 20;
    setup.filenameADPKMeans = sprintf('ADPKMmeans_%s',setup.filenameBCPruned);
    RunKMeansDTWV2(params,  setup.filenameBCPruned, setup.dirMotorTargets, setup.filenameADPKMeans, 1);

    % play clusters and their contents
    setup.DTWClustersDir = sprintf('WAVInfantF_%s', setup.experimentName);
    PlayInfantDTWClusters(params, setup.filenameADPKMeans, setup.dirMotorTargets,  setup.DTWClustersDir);    

    % centre targets by clusters and generate new list
    setup.filenameCentreTargetsFRIC = sprintf('%sFRIC', setup.filenameCentreTargets);
    CentreDTWClusters(params, setup.filenameADPKMeans, setup.dirMotorTargets, setup.filenameCentreTargetsFRIC);

    % not nasalized
    selectionIdx=1:1000;
    debug=0;
    params.WantTubeMinimumPoint = 1;
    PlayRawIndividualSynthesisV2(params, setup.filenameCentreTargetsFRIC, setup.dirMotorTargets, selectionIdx,1 ,params.silencePadding, 1, debug);    

    